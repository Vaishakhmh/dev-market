version: "3.9"
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
    command: redis server --loglevel info
    volumes:
      - ./docker-volumes/cache:/data
  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./docker-volumes/mongodb:/data/db
  mysql:
    container_name: mysql_container
    image: mysql
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_USER= devMarket
      - MYSQL_DATABASE= devMarket_auth
      - MYSQL_ROOT_PASSWORD= api
      - MYSQL_PASSWORD= api
    ports:
      - 3306:3306
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql
  postgres:
    container_name: postgres_container
    image: postgres
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    ports:
      - 5432:5432
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgressql
    environment:
      - POSTGRES_USER= devMarket
      - POSTGRES_PASSWORD= api
      - POSTGRES_DB= devMarket_reviews
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13.0-management-alpine
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    restart: always
    environment:
      - ES_JAVA_OPTS= -Xmx1g -Xms1g
      - bootstrap.memory_lock= "true"
      - discovery.type= single-node
      - xpack.security.enabled= "false"
      - xpack.security.authc.api_key.enabled= "true"
      - xpack.monitoring.collection.enabled= "true"
      - xpack.security.enrollment.enabled= "true"
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./docker-volumes/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.13.0
    restart: always
    environment:
      - ELASTICSEARCH_HOST=["http://elasticsearch_container:9200"]
    ports:
      - 5601:5601
    networks:
      - elastic
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch

networks:
  elastic:
    name: elastic
